// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecTablenRegex.Features.ParaWorks
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FoxySignUp")]
    [NUnit.Framework.CategoryAttribute("web")]
    public partial class FoxySignUpFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "web"};
        
#line 1 "FoxySignUp.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/ParaWorks", "FoxySignUp", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Missing Feilds Error")]
        [NUnit.Framework.CategoryAttribute("foxy")]
        public void VerifyMissingFeildsError()
        {
            string[] tagsOfScenario = new string[] {
                    "foxy"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Missing Feilds Error", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
  testRunner.Given("go to foxy signup page with url \"https://admin.foxycart.com/signup/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
  testRunner.When("Enter signup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "FieldName",
                            "Errors"});
                table5.AddRow(new string[] {
                            "FirstName",
                            "Please enter your first name."});
                table5.AddRow(new string[] {
                            "LastName",
                            "Please enter your last name."});
                table5.AddRow(new string[] {
                            "Email",
                            "Please enter your email address."});
                table5.AddRow(new string[] {
                            "Password",
                            "Please enter your password."});
#line 10
  testRunner.Then("all missing feilds error should display", ((string)(null)), table5, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("verify new user email")]
        [NUnit.Framework.CategoryAttribute("foxy")]
        public void VerifyNewUserEmail()
        {
            string[] tagsOfScenario = new string[] {
                    "foxy"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify new user email", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 23
 testRunner.Given("go to foxy signup page with url \"https://admin.foxycart.com/signup/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "email",
                            "message"});
                table6.AddRow(new string[] {
                            "newemail",
                            ""});
                table6.AddRow(new string[] {
                            "wrong_email",
                            "Please enter your email address."});
                table6.AddRow(new string[] {
                            "used_email",
                            "This email address is already in use. Would you like to login instead?."});
#line 24
 testRunner.When("validate user email message", ((string)(null)), table6, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Error Message")]
        [NUnit.Framework.CategoryAttribute("foxy")]
        [NUnit.Framework.TestCaseAttribute("null", "rand", "rand", "rand", "rand", "rand", "action", "action", "action", "action", "rand", "rand", null)]
        [NUnit.Framework.TestCaseAttribute("rand", "null", "rand", "rand", "rand", "rand", "action", "action", "action", "action", "rand", "rand", null)]
        public void ValidateErrorMessage(string firstName, string lastName, string email, string password, string accomplish_Feild, string hearAbout_Field, string a_Programmer_Feild, string a_FrontEnd_Developer_Feild, string a_Designer_Feild, string a_Store_Admin_Feild, string storeName, string storeSubDomain, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "foxy"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("Email", email);
            argumentsOfScenario.Add("Password", password);
            argumentsOfScenario.Add("Accomplish_Feild", accomplish_Feild);
            argumentsOfScenario.Add("HearAbout_Field", hearAbout_Field);
            argumentsOfScenario.Add("A_Programmer_Feild", a_Programmer_Feild);
            argumentsOfScenario.Add("A_FrontEnd_Developer_Feild", a_FrontEnd_Developer_Feild);
            argumentsOfScenario.Add("A_Designer_Feild", a_Designer_Feild);
            argumentsOfScenario.Add("A_Store_Admin_Feild", a_Store_Admin_Feild);
            argumentsOfScenario.Add("StoreName", storeName);
            argumentsOfScenario.Add("StoreSubDomain", storeSubDomain);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Error Message", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 36
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 37
 testRunner.Given("go to foxy signup page with url \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
 testRunner.When("enter all feilds except firstname", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.Then("Enter signup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 40
 testRunner.And("error should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
